[{"/home/shivam/SPE_major/online exam system frontend/src/index.js":"1","/home/shivam/SPE_major/online exam system frontend/src/App.js":"2","/home/shivam/SPE_major/online exam system frontend/src/Components/HomeComponent/Home.js":"3","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentLogin/StudentLogin.js":"4","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/StudentDashboard.js":"5","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentSignup/StudentSignup.js":"6","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminLogin/AdminLogin.js":"7","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/AdminDashboard.js":"8","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/ResultComponent/Result.js":"9","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/Subject/Subject.js":"10","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/ExamComponent/Exam.js":"11","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js":"12","/home/shivam/SPE_major/online exam system frontend/src/Components/baseUrl.jsx":"13","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/Dashboard/Dashboard.js":"14","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ResultComponent/Result.js":"15","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/QuestionComponent/Question.js":"16","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/StudentList/StudentList.js":"17","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/SubjectComponent/Subject.js":"18","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/StudentList/Student/Student.js":"19","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/Exam.js":"20","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/ViewQuestion/ViewQuestion.js":"21","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/DetailComponent/Details.js":"22","/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/AddQuestion/AddQuestion.js":"23","/home/shivam/SPE_major/online exam system frontend/src/Components/QuizTimer.js":"24"},{"size":144,"mtime":1646056932000,"results":"25","hashOfConfig":"26"},{"size":1307,"mtime":1646056874000,"results":"27","hashOfConfig":"26"},{"size":1420,"mtime":1681657165555,"results":"28","hashOfConfig":"26"},{"size":2467,"mtime":1681658311727,"results":"29","hashOfConfig":"26"},{"size":2242,"mtime":1646056918000,"results":"30","hashOfConfig":"26"},{"size":2855,"mtime":1646056932000,"results":"31","hashOfConfig":"26"},{"size":2308,"mtime":1646056908000,"results":"32","hashOfConfig":"26"},{"size":4176,"mtime":1681170978384,"results":"33","hashOfConfig":"26"},{"size":2405,"mtime":1646056920000,"results":"34","hashOfConfig":"26"},{"size":1638,"mtime":1646056924000,"results":"35","hashOfConfig":"26"},{"size":1954,"mtime":1681660629582,"results":"36","hashOfConfig":"26"},{"size":7542,"mtime":1681681957838,"results":"37","hashOfConfig":"26"},{"size":71,"mtime":1646056910000,"results":"38","hashOfConfig":"26"},{"size":2717,"mtime":1646056882000,"results":"39","hashOfConfig":"26"},{"size":2470,"mtime":1681173241006,"results":"40","hashOfConfig":"26"},{"size":2587,"mtime":1646056894000,"results":"41","hashOfConfig":"26"},{"size":2044,"mtime":1646056902000,"results":"42","hashOfConfig":"26"},{"size":5653,"mtime":1646056904000,"results":"43","hashOfConfig":"26"},{"size":3360,"mtime":1646056900000,"results":"44","hashOfConfig":"26"},{"size":7786,"mtime":1681672200070,"results":"45","hashOfConfig":"26"},{"size":8122,"mtime":1646056890000,"results":"46","hashOfConfig":"26"},{"size":3524,"mtime":1681672099835,"results":"47","hashOfConfig":"26"},{"size":3789,"mtime":1646056886000,"results":"48","hashOfConfig":"26"},{"size":1205,"mtime":1681680816754,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b9b3ty",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"/home/shivam/SPE_major/online exam system frontend/src/index.js",[],"/home/shivam/SPE_major/online exam system frontend/src/App.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/HomeComponent/Home.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentLogin/StudentLogin.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/StudentDashboard.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentSignup/StudentSignup.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminLogin/AdminLogin.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/AdminDashboard.js",["101"],"\r\n    \r\n    import style from \"./AdminDashboard.module.css\";\r\n\r\n    import {useHistory} from \"react-router-dom\";\r\n\r\n    import {NavLink , BrowserRouter , Switch , Route} from \"react-router-dom\";\r\n\r\n     import pic4 from \"../../../images/logo.png\";\r\n    \r\n    \r\n    import Dashboard from \"./Dashboard/Dashboard\";\r\n    import Subject from \"./SubjectComponent/Subject\";\r\n    import Exam from \"./ExamComponent/Exam\";\r\n    import Question from \"./QuestionComponent/Question\";\r\n    import Result from \"./ResultComponent/Result\";\r\n    import StudentList from \"./StudentList/StudentList\";\r\n    import Student from \"./StudentList/Student/Student\";\r\n\r\n    import Details from \"./ExamComponent/DetailComponent/Details\";\r\n    import ViewQuestion from \"./ExamComponent/ViewQuestion/ViewQuestion\";\r\n    import AddQuestion from \"./ExamComponent/AddQuestion/AddQuestion\";\r\n\r\n\r\n    \r\n    function AdminDashboard(){\r\n\r\n         let history = useHistory();\r\n\r\n         function goToAdminLogin(){\r\n              history.push(\"/AdminLogin\");\r\n         }\r\n\r\n\r\n        return (\r\n            <>\r\n            \r\n             <BrowserRouter>\r\n            \r\n                 <div id={style.header}>\r\n                \r\n            <div id={style.headerHeadingBox}>\r\n                <h3>Online Exam System</h3> \r\n            </div>\r\n\r\n             <div id={style.headerMenuBox}>\r\n                <NavLink exact to=\"/AdminDashboard\"> <span> Dashboard</span> </NavLink>\r\n                <a> <span onClick={goToAdminLogin}> Logout</span></a>\r\n             </div>\r\n        </div>\r\n\r\n                <div id={style.content}>\r\n\r\n                <div id={style.sideMenubar}>\r\n                         <div id={style.sideMenubarImageBox}>\r\n                           <img src= {pic4} alt=\"\" />\r\n                         </div>\r\n\r\n                         <div id={style.sideMenubarList}>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Subject\"> <button > <span>  Subject </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Exam\"> <button > <span>  Exam </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Question\"> <button > <span>  Question </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Result\"> <button > <span>  Result </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/StudentList\"> <button > <span>  StudentList </span></button></NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div id={style.display}>\r\n                      \r\n              <Switch>\r\n                  <Route exact path=\"/AdminDashboard\" component={Dashboard}></Route>\r\n                  \r\n                  <Route exact path=\"/AdminDashboard/Subject\" component={Subject}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Exam\" component={Exam}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Question\" component={Question}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Result\" component={Result}></Route>\r\n                  <Route exact path=\"/AdminDashboard/StudentList\" component={StudentList}></Route>\r\n\r\n\r\n                      <Route exact path=\"/AdminDashboard/Exam/Details/:id\" component={Details}></Route>\r\n                      <Route exact path=\"/AdminDashboard/Exam/ViewQuestion/:id\" \r\n                      component={ViewQuestion}></Route>\r\n                      <Route exact path=\"/AdminDashboard/Exam/AddQuestion/:id\" component={AddQuestion}></Route>\r\n\r\n                      <Route exact path=\"/AdminDashboard/StudentList/Details/:id\" component={Student}></Route>\r\n\r\n\r\n              </Switch>\r\n                    \r\n                    </div> \r\n\r\n                </div>\r\n\r\n\r\n                          \r\n                </BrowserRouter>\r\n\r\n              \r\n               \r\n\r\n              \r\n            </>\r\n        );\r\n    }\r\n\r\n    export default AdminDashboard;","/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/ResultComponent/Result.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/Subject/Subject.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/ExamComponent/Exam.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js",["102","103","104"],"\r\n\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nimport baseUrl from \"../../../baseUrl\";\r\nimport QuizTimer from \"../../../QuizTimer\";\r\nimport {  Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  questionBox: {\r\n    border: '1px solid black',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    height:'100%',\r\n    width:'100%'\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '10px',\r\n  },\r\n  option: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '10px',\r\n  },\r\n  radio: {\r\n    marginRight: '10px',\r\n  },\r\n  label: {\r\n    marginLeft: '10px',\r\n  },\r\n});\r\nfunction Test() {\r\n\r\n    // ---------------------------------------------------------\r\n    let { id } = useParams();\r\n    let { category } = useParams();\r\n\r\n    const [allQuestions , setAllQuestions] = useState([]);\r\n    const [examDetails ,setExamDetails] =useState([]);\r\n    const [timeUp, setTimeUp] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function getAllQuestions(){\r\n            let value = await axios.get(`${baseUrl}/exam/${id}/question`);\r\n            setAllQuestions(value.data);\r\n            //console.log(value.data);\r\n        }\r\n        getAllQuestions();\r\n    },[id]);\r\n    let passMarks=examDetails.passMarks;\r\n    let totalMarks=examDetails.marks;\r\n    let totalQuestion=examDetails.totalQuestion;\r\n    let totalTime=examDetails.time;\r\n    totalTime=totalTime*60000;\r\n    useEffect(() => {\r\n        async function getExamDetails(){\r\n          let detail =await axios.get(`${baseUrl}/exam/${id}`);\r\n          setExamDetails(detail.data);\r\n\r\n      }\r\n      getExamDetails();\r\n  },[id]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setTimeUp(true);\r\n        }, 60000); // 60 seconds in milliseconds\r\n    \r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n        if (timeUp) {\r\n          submitTest();\r\n        }\r\n      }, [timeUp]);\r\n    // ---------------------------------------------------------\r\n    \r\n    // const [userAnswer , setUserAnswer] = useState({\r\n    //     answer1:\"\",\r\n    //     answer2:\"\",\r\n    //     answer3:\"\",\r\n    // });\r\n\r\n    const [answer , setAnswer] = useState({\r\n        // answer1:\"\",\r\n        // answer2:\"\",\r\n        // answer3:\"\",\r\n        // answer4:\"\",\r\n        // answer5:\"\",\r\n    });\r\n\r\n\r\n    let  correctAnswer  = [] ;\r\n    \r\n    function onRadioButtonChange(e){\r\n       setAnswer({\r\n            ...answer, \r\n            [e.target.name] : e.target.value\r\n    });\r\n      \r\n       \r\n    }\r\n\r\n    let count = 0;\r\n\r\n    \r\n\r\n\r\n    async function submitTest() {\r\n        let correctAnswers = allQuestions.map((question) => question.answer);\r\n        let score = 0;\r\n      \r\n        for (let i = 0; i < allQuestions.length; i++) {\r\n          if (answer[`answer${i + 1}`] === correctAnswers[i]) {\r\n            score++;\r\n          }\r\n        }\r\n      console.log(passMarks);\r\n       var status;\r\n         if(score >= passMarks) status=\"Pass\";\r\n         else status = \"Fail\";\r\n\r\n        \r\n\r\n\r\n        var date = new Date();\r\n        var d =  date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear() ;\r\n        var t =  date.getHours() + \":\" + date.getMinutes() +  \":\" + date.getSeconds() ;\r\n   \r\n\r\n       let data={\r\n         \"status\": status,\r\n         \"score\": score,\r\n         \"email\":{\"email\":sessionStorage.getItem(\"user\")},    // email\r\n         \"edate\": d+\" \"+t,\r\n         \"sname\": {\"name\":category},   // --  subject name\r\n         \"totalMarks\": totalMarks,\r\n         \"examId\": {\"id\":id},         // exam id\r\n         \"totalQuestion\": totalQuestion\r\n       };\r\n\r\n       //console.log(data);\r\n \r\n       await axios.post(`${baseUrl}/result` , data);\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n     let history = useHistory();\r\n\r\n    return (\r\n        <div >\r\n        <h1>All questions are mandatory</h1>\r\n        <QuizTimer setTimeUp={setTimeUp}/>\r\n            {\r\n                 \r\n                allQuestions.map((data , i) => {\r\n                        count++;\r\n                        return (\r\n                            <div className={classes.questionBox} key={i}>\r\n\r\n                              <div  className={classes.question}>\r\n                                <h4>Question No.{i+1}</h4>\r\n                                 <span>{data.qname}</span> \r\n                            </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionOne}\r\n                                  id={style.option1}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option1'>{data.optionOne}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionTwo}\r\n                                  id={style.option2}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option2'>{data.optionTwo}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionThree}\r\n                                  id={style.option3}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option3'>{data.optionThree}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionFour}\r\n                                  id={style.option4}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option4'>{data.optionFour}</label>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                  \r\n                })\r\n            }\r\n            <Button style={{backgroundColor:'gray',marginBottom:'5%',color:'white',borderRadius:'20px'}} onClick={submitTest}>Submit Exam </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test","/home/shivam/SPE_major/online exam system frontend/src/Components/baseUrl.jsx",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/Dashboard/Dashboard.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ResultComponent/Result.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/QuestionComponent/Question.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/StudentList/StudentList.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/SubjectComponent/Subject.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/StudentList/Student/Student.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/Exam.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/ViewQuestion/ViewQuestion.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/DetailComponent/Details.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/AddQuestion/AddQuestion.js",[],"/home/shivam/SPE_major/online exam system frontend/src/Components/QuizTimer.js",["105"],"import React, { useState, useEffect } from \"react\";\nimport { Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  timer: {\n    color: (timeLeft) => (timeLeft < 10 ? \"red\" : \"inherit\"),\n  },\n  box: {\n    marginLeft: \"auto\",\n    border: \"1px solid black\",\n    padding: \"0px\",\n    borderRadius: \"5px\",\n    backgroundColor:'gray',\n    width:'20%',\n    position:'absolute',\n    top:'0',\n    right:'0'\n  },\n}));\n\nfunction QuizTimer() {\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [quizEnded, setQuizEnded] = useState(false);\n  const classes = useStyles(timeLeft);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setQuizEnded(true);\n    }\n  }, [timeLeft]);\n\n  if (quizEnded) {\n    return <div>Quiz ended!</div>;\n  }\n\n  return (\n  \n      <Typography style={{position:'absolute',top:'0',right:'0'}} variant=\"h4\" component=\"h2\" className={classes.timer}>\n       <h5>Time left: {timeLeft}s</h5> \n      </Typography>\n   \n  );\n}\n\nexport default QuizTimer;\n",{"ruleId":"106","severity":1,"message":"107","line":48,"column":17,"nodeType":"108","endLine":48,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":65,"column":5,"nodeType":"111","messageId":"112","endLine":65,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":87,"column":10,"nodeType":"115","endLine":87,"endColumn":18,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":105,"column":10,"nodeType":"111","messageId":"112","endLine":105,"endColumn":23},{"ruleId":"109","severity":1,"message":"118","line":2,"column":22,"nodeType":"111","messageId":"112","endLine":2,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'totalTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'submitTest'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'correctAnswer' is assigned a value but never used.","'Box' is defined but never used.",{"desc":"120","fix":"121"},"Update the dependencies array to be: [submitTest, timeUp]",{"range":"122","text":"123"},[2203,2211],"[submitTest, timeUp]"]
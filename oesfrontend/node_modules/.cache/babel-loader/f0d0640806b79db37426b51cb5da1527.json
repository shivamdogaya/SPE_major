{"ast":null,"code":"var _jsxFileName = \"/home/shivam/Downloads/2-ReactSpringBootApplication-master (1)/online exam system frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport baseUrl from \"../../../baseUrl\";\nimport QuizTimer from \"../../../QuizTimer\";\nimport { Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  questionBox: {\n    border: '1px solid black',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '20px',\n    height: '100%',\n    width: '100%'\n  },\n  question: {\n    fontWeight: 'bold',\n    marginBottom: '10px'\n  },\n  option: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '10px'\n  },\n  radio: {\n    marginRight: '10px'\n  },\n  label: {\n    marginLeft: '10px'\n  }\n});\nfunction Test() {\n  _s();\n  // ---------------------------------------------------------\n  let {\n    id\n  } = useParams();\n  let {\n    category\n  } = useParams();\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [examDetails, setExamDetails] = useState([]);\n  const [timeUp, setTimeUp] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    async function getAllQuestions() {\n      let value = await axios.get(`${baseUrl}/exam/${id}/question`);\n      setAllQuestions(value.data);\n      //console.log(value.data);\n    }\n\n    getAllQuestions();\n  }, [id]);\n  useEffect(() => {\n    async function getExamDetails() {\n      let detail = await axios.get(`${baseUrl}/exam/${id}`);\n      setExamDetails(detail.data);\n      console.log(detail.data);\n    }\n    getExamDetails();\n  }, [id]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeUp(true);\n    }, 60000); // 60 seconds in milliseconds\n\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    if (timeUp) {\n      submitTest();\n    }\n  }, [timeUp]);\n  // ---------------------------------------------------------\n\n  // const [userAnswer , setUserAnswer] = useState({\n  //     answer1:\"\",\n  //     answer2:\"\",\n  //     answer3:\"\",\n  // });\n\n  const [answer, setAnswer] = useState({\n    // answer1:\"\",\n    // answer2:\"\",\n    // answer3:\"\",\n    // answer4:\"\",\n    // answer5:\"\",\n  });\n  let correctAnswer = [];\n  function onRadioButtonChange(e) {\n    setAnswer({\n      ...answer,\n      [e.target.name]: e.target.value\n    });\n  }\n  let count = 0;\n  async function submitTest() {\n    let correctAnswers = allQuestions.map(question => question.answer);\n    let score = 0;\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (answer[`answer${i + 1}`] === correctAnswers[i]) {\n        score = score + 4;\n      }\n    }\n    var status;\n    var totalMarks = 4 * allQuestions.length;\n    if (score >= totalMarks / 2) status = \"Pass\";else status = \"Fail\";\n    var date = new Date();\n    var d = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n    var t = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    let data = {\n      \"status\": status,\n      \"score\": score,\n      \"email\": {\n        \"email\": sessionStorage.getItem(\"user\")\n      },\n      // email\n      \"edate\": d + \" \" + t,\n      \"sname\": {\n        \"name\": category\n      },\n      // --  subject name\n      \"totalMarks\": totalMarks,\n      \"examId\": {\n        \"id\": id\n      },\n      // exam id\n      \"totalQuestion\": totalMarks / 4\n    };\n\n    //console.log(data);\n\n    await axios.post(`${baseUrl}/result`, data);\n    history.push(\"/StudentDashboard/Result\");\n  }\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All questions are mandatory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(QuizTimer, {\n      setTimeUp: setTimeUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), allQuestions.map((data, i) => {\n      count++;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.question,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Question No.\", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.qname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.option,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.radio,\n            onChange: e => onRadioButtonChange(e),\n            value: data.optionOne,\n            id: style.option1,\n            name: 'answer' + count,\n            type: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"option1\",\n            children: data.optionOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.option,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.radio,\n            onChange: e => onRadioButtonChange(e),\n            value: data.optionTwo,\n            id: style.option2,\n            name: 'answer' + count,\n            type: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"option2\",\n            children: data.optionTwo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.option,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.radio,\n            onChange: e => onRadioButtonChange(e),\n            value: data.optionThree,\n            id: style.option3,\n            name: 'answer' + count,\n            type: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"option3\",\n            children: data.optionThree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.option,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.radio,\n            onChange: e => onRadioButtonChange(e),\n            value: data.optionFour,\n            id: style.option4,\n            name: 'answer' + count,\n            type: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"option4\",\n            children: data.optionFour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 31\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: 'gray',\n        marginBottom: '5%',\n        color: 'white',\n        borderRadius: '20px'\n      },\n      onClick: submitTest,\n      children: \"Submit Exam \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"4/abt17Vt/g97erGA7bbj30othg=\", false, function () {\n  return [useParams, useParams, useStyles, useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["axios","React","useState","useEffect","useHistory","useParams","style","baseUrl","QuizTimer","Button","makeStyles","jsxDEV","_jsxDEV","useStyles","questionBox","border","borderRadius","padding","marginBottom","height","width","question","fontWeight","option","display","alignItems","radio","marginRight","label","marginLeft","Test","_s","id","category","allQuestions","setAllQuestions","examDetails","setExamDetails","timeUp","setTimeUp","classes","getAllQuestions","value","get","data","getExamDetails","detail","console","log","timer","setTimeout","clearTimeout","submitTest","answer","setAnswer","correctAnswer","onRadioButtonChange","e","target","name","count","correctAnswers","map","score","i","length","status","totalMarks","date","Date","d","getDate","getMonth","getFullYear","t","getHours","getMinutes","getSeconds","sessionStorage","getItem","post","history","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","qname","onChange","optionOne","option1","type","htmlFor","optionTwo","option2","optionThree","option3","optionFour","option4","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["/home/shivam/Downloads/2-ReactSpringBootApplication-master (1)/online exam system frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["\r\n\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nimport baseUrl from \"../../../baseUrl\";\r\nimport QuizTimer from \"../../../QuizTimer\";\r\nimport {  Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  questionBox: {\r\n    border: '1px solid black',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    height:'100%',\r\n    width:'100%'\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '10px',\r\n  },\r\n  option: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '10px',\r\n  },\r\n  radio: {\r\n    marginRight: '10px',\r\n  },\r\n  label: {\r\n    marginLeft: '10px',\r\n  },\r\n});\r\nfunction Test() {\r\n\r\n    // ---------------------------------------------------------\r\n    let { id } = useParams();\r\n    let { category } = useParams();\r\n\r\n    const [allQuestions , setAllQuestions] = useState([]);\r\n    const [examDetails ,setExamDetails] =useState([]);\r\n    const [timeUp, setTimeUp] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function getAllQuestions(){\r\n            let value = await axios.get(`${baseUrl}/exam/${id}/question`);\r\n            setAllQuestions(value.data);\r\n            //console.log(value.data);\r\n        }\r\n        getAllQuestions();\r\n    },[id]);\r\n    useEffect(() => {\r\n        async function getExamDetails(){\r\n          let detail =await axios.get(`${baseUrl}/exam/${id}`);\r\n          setExamDetails(detail.data);\r\n\r\n          console.log(detail.data);\r\n      }\r\n      getExamDetails();\r\n  },[id]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setTimeUp(true);\r\n        }, 60000); // 60 seconds in milliseconds\r\n    \r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n        if (timeUp) {\r\n          submitTest();\r\n        }\r\n      }, [timeUp]);\r\n    // ---------------------------------------------------------\r\n    \r\n    // const [userAnswer , setUserAnswer] = useState({\r\n    //     answer1:\"\",\r\n    //     answer2:\"\",\r\n    //     answer3:\"\",\r\n    // });\r\n\r\n    const [answer , setAnswer] = useState({\r\n        // answer1:\"\",\r\n        // answer2:\"\",\r\n        // answer3:\"\",\r\n        // answer4:\"\",\r\n        // answer5:\"\",\r\n    });\r\n\r\n\r\n    let  correctAnswer  = [] ;\r\n    \r\n    function onRadioButtonChange(e){\r\n       setAnswer({\r\n            ...answer, \r\n            [e.target.name] : e.target.value\r\n    });\r\n      \r\n       \r\n    }\r\n\r\n    let count = 0;\r\n\r\n    \r\n\r\n\r\n    async function submitTest() {\r\n        let correctAnswers = allQuestions.map((question) => question.answer);\r\n        let score = 0;\r\n      \r\n        for (let i = 0; i < allQuestions.length; i++) {\r\n          if (answer[`answer${i + 1}`] === correctAnswers[i]) {\r\n            score=score+4;\r\n          }\r\n        }\r\n      \r\n       var status;\r\n         var totalMarks=4*allQuestions.length;\r\n         if(score >= totalMarks/2) status=\"Pass\";\r\n         else status = \"Fail\";\r\n\r\n        \r\n\r\n\r\n        var date = new Date();\r\n        var d =  date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear() ;\r\n        var t =  date.getHours() + \":\" + date.getMinutes() +  \":\" + date.getSeconds() ;\r\n   \r\n\r\n       let data={\r\n         \"status\": status,\r\n         \"score\": score,\r\n         \"email\":{\"email\":sessionStorage.getItem(\"user\")},    // email\r\n         \"edate\": d+\" \"+t,\r\n         \"sname\": {\"name\":category},   // --  subject name\r\n         \"totalMarks\": totalMarks,\r\n         \"examId\": {\"id\":id},         // exam id\r\n         \"totalQuestion\": totalMarks/4\r\n       };\r\n\r\n       //console.log(data);\r\n \r\n       await axios.post(`${baseUrl}/result` , data);\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n     let history = useHistory();\r\n\r\n    return (\r\n        <div >\r\n        <h1>All questions are mandatory</h1>\r\n        <QuizTimer setTimeUp={setTimeUp}/>\r\n            {\r\n                 \r\n                allQuestions.map((data , i) => {\r\n                        count++;\r\n                        return (\r\n                            <div className={classes.questionBox} key={i}>\r\n\r\n                              <div  className={classes.question}>\r\n                                <h4>Question No.{i+1}</h4>\r\n                                 <span>{data.qname}</span> \r\n                            </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionOne}\r\n                                  id={style.option1}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option1'>{data.optionOne}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionTwo}\r\n                                  id={style.option2}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option2'>{data.optionTwo}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionThree}\r\n                                  id={style.option3}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option3'>{data.optionThree}</label>\r\n                              </div>\r\n                        \r\n                              <div className={classes.option}>\r\n                                <input\r\n                                 className={classes.radio}\r\n                                  onChange={(e) => onRadioButtonChange(e)}\r\n                                  value={data.optionFour}\r\n                                  id={style.option4}\r\n                                  name={'answer' + count}\r\n                                  type='radio'\r\n                                />\r\n                                <label htmlFor='option4'>{data.optionFour}</label>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                  \r\n                })\r\n            }\r\n            <Button style={{backgroundColor:'gray',marginBottom:'5%',color:'white',borderRadius:'20px'}} onClick={submitTest}>Submit Exam </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test"],"mappings":"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"},"metadata":{},"sourceType":"module"}